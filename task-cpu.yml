AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a task into an ECS cluster 
Parameters:
  EnvironmentName:
    Type: String
    Default: test
    Description: The name of the environment to add this task to
  TaskName:
    Type: String
    Default: tensorflow-cpu
    Description: A name for the task
  ImageUrl:
    Type: String
    Default: brentley/tensorflow-cpu:latest
    Description: The url of a docker image
  ContainerCpu:
    Type: Number
    Default: 1024
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 6144
    Description: How much memory in megabytes to give the container
  DesiredCount:
    Type: Number
    Default: 1
    Description: How many copies of the task to run
  Role:
    Type: String
    Default: ""

Conditions:
  HasCustomRole: !Not [ !Equals [!Ref 'Role', ''] ]

Resources:
  # A log group for storing the stdout logs from this task's containers
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${EnvironmentName}-task-${TaskName}

  # A log group for the gpu container
  GPULogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${EnvironmentName}-task-tensorflow-gpu
      
  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'TaskName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      TaskRoleArn:
        Fn::If:
          - 'HasCustomRole'
          - !Ref 'Role'
          - !Ref "AWS::NoValue"
      ContainerDefinitions:
        - Name: !Ref 'TaskName'
          Image: !Ref 'ImageUrl'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Sub ${EnvironmentName}-task-${TaskName}
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'TaskName'

